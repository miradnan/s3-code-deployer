#!/bin/sh
### BEGIN INIT INFO
# Provides:          S3 CodeDeployer
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO
#set -e | does not work on RHEL

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="S3 CodeDeployer"
NAME=s3-code-deployer
USER=root

DAEMON=/etc/s3-code-deployer/bin/$NAME
DAEMON_ARGS=""
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
CHUID=$USER

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
if [ ! -r /etc/s3-code-deployer/config.yml ]
then
  echo "You have not setup the configuration file yet. Please set as per https://miradnan.github.io/s3-code-deployer/"
fi


# Define functions.
. /etc/init.d/functions


#
# Function that starts the daemon/service
#
start()
{
  if is_running;
  then
    echo "$NAME is already running"
  else
    echo "Starting $NAME"
    if start-stop-daemon -b --start --quiet --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_ARGS;
    then
      cat /dev/null > $PIDFILE
      pidof $NAME >> $PIDFILE
    fi
  fi
  echo "."
}


#
# Function that stops the daemon/service
#
stop()
{
  if is_running;
  then
    echo "Stopping $NAME";
    start-stop-daemon --stop --quiet --oknodo --retry=30 --pidfile $PIDFILE
  else
    echo "$NAME already stopped";
  fi

  if [ -f "$PIDFILE" ];
  then
    rm -f $PIDFILE
  fi

  echo "."
}

#
# Restart
#
restart() {
  stop && start
  return 0
}

#
# Checks if program is running
#
is_running() {
    [ -f "$PIDFILE" ]
}


case "$1" in
start)
    start
    ;;
stop)
    stop
    ;;
restart)
    restart
    ;;
status)
    if is_running;
    then
      echo "Running"
    else
      echo "Stopped"
    fi
    ;;
*)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit